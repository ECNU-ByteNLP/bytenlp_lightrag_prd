# LightRAG Configuration Example for PRD Functional Point Extraction
# Copy this file to config.ini and modify as needed

[LLM]
# LLM model configuration
model_name = gpt-3.5-turbo
api_key = your_api_key_here
api_base = https://api.openai.com/v1

[ENTITY_EXTRACTION]
# Entity extraction configuration for PRD documents with strict hierarchy constraints
# Hierarchical entity types: 主功能 → 父功能点 → 子功能点 → 业务条件
entity_types = 主功能,父功能点,子功能点,业务条件

# Language for extraction
language = 中文

# Number of examples to use (0-1, where 1 includes the hierarchical PRD example)
example_number = 1

# Maximum number of extraction iterations
entity_extract_max_gleaning = 3

# Enable strict hierarchy validation
strict_hierarchy = true

# Strict tree structure constraints
enforce_tree_structure = true
prevent_same_level_connections = true
prevent_cross_level_connections = true

[VECTOR_DB]
# Vector database configuration
vector_db_type = nano_vectordb
embedding_model = text-embedding-ada-002
embedding_dim = 1536

[GRAPH_DB]
# Knowledge graph configuration
graph_db_type = networkx
graph_storage_path = rag_storage/graph_chunk_entity_relation.graphml

# Enable hierarchical layout for tree-like visualization
hierarchical_layout = true

# Graph validation settings
validate_hierarchy = true
max_parent_nodes = 1
enforce_tree_layout = true

[STORAGE]
# Storage configuration
kv_store_type = json
storage_path = rag_storage

[PROCESSING]
# Text processing configuration
chunk_size = 1000
chunk_overlap = 200
max_tokens = 4000

[VISUALIZATION]
# Graph visualization settings
output_format = html,graphml
tree_layout = true
hierarchy_colors = true
force_directed_layout = true
